name: npm-build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'

jobs:
  npm-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Install Wine and enable multiarch
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine32

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install electron-builder
        run: npm install electron-builder -g

      - name: Install dependencies
        run: npm install

      - name: Build
        run: electron-builder -w
        env:
          GITHUB_TOKEN: ${{ secrets.OWNER_TOKEN }}  # Use the owner's token
          GH_TOKEN: ${{ secrets.OWNER_TOKEN }}  # Also set GH_TOKEN
          npm_config_target: 16.0.0
          npm_config_runtime: electron
          npm_config_build_from_source: true
          npm_config_arch: x64
          npm_config_target_arch: x64
          npm_config_disturl: https://electronjs.org/headers
          npm_config_runtime_version: 16.0.0

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.OWNER_TOKEN }}  # Use the owner's token
          GH_TOKEN: ${{ secrets.OWNER_TOKEN }}  # Also set GH_TOKEN
        with:
          tag_name: v1.0.2  # Update this with your desired tag name
          release_name: Release v1.0.2  # Update this with your desired release name
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.OWNER_TOKEN }}  # Use the owner's token
          GH_TOKEN: ${{ secrets.OWNER_TOKEN }}  # Also set GH_TOKEN
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/electron-desktop-app\ Setup\ 1.0.2.exe  # Update this with the path to your built Electron app
          asset_name: electron-desktop-app-Setup-1.0.2.exe  # Update this with the name of your built Electron app
          asset_content_type: application/octet-stream
